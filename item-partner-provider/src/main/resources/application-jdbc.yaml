spring:
  datasource:
    name: item_partner
    driver-class-name: com.alibaba.cobar.jdbc.Driver
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}
    url: ${spring.datasource.url}
    #以下为默认配置
    # Druid 数据源配置，继承spring.datasource.* 配置，相同则覆盖
    druid:
      initial-size: 10
      min-idle: 10                                     #最小连接池数量
      max-active: 50                                   #最大连接池数量
      max-wait: 5000                                   #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      time-between-eviction-runs-millis: 60000         #1分钟（1.0.14）    有两个含义：
      min-evictable-idle-time-millis: 300000           #30分钟（1.0.14）    连接保持空闲而不被驱逐的最长时间
      test-while-idle: true                            #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-on-borrow: false                            #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false                            #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      validation-query: select 1                       #用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
      validation-query-timeout: 1                      #单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      pool-prepared-statements: false                  #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭
      connection-init-sqls: set names utf8mb4
      max-open-prepared-statements: -1                 #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
                                                           #    1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接
                                                           #    2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明

          # Druid 数据源 datasource-one 配置，继承spring.datasource.druid.* 配置，相同则覆盖，不同配置具体再加
mybatis:
    mapper-locations: "classpath:/mapper/*Mapper.xml"
    typeAliasesPackage: com.dfire.soa.item.partner.mapper



---
spring:
  profiles: dev
  datasource:

---
spring:
  profiles: daily
  datasource:
    name: daily
---
spring:
  profiles: pre
  datasource:
    name: item_partner
    driver-class-name: com.alibaba.cobar.jdbc.Driver
    username: item_partner
    password: item_partner@552208
    url: jdbc:cobar_cluster://item_partner.cobar.2dfire-inc.com,item_partner2.cobar.2dfire-inc.com:8066/item_partner?statementInterceptors=com.dfire.magiceye.mysql.TracingStatementInterceptor&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true&allowMultiQueries=true


---
spring:
  profiles: publish
  datasource:
    name: item_partner
    driver-class-name: com.alibaba.cobar.jdbc.Driver
    username: item_partner
    password: item_partner@552208
    url: jdbc:cobar_cluster://item_partner.cobar.2dfire-inc.com,item_partner2.cobar.2dfire-inc.com:8066/item_partner?statementInterceptors=com.dfire.magiceye.mysql.TracingStatementInterceptor&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true&allowMultiQueries=true
